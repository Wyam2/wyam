Title: Archive
---
@{
    Layout = "/_Layout.cshtml";
}

@{
    foreach(IGrouping<int, IDocument> group in Model.DocumentList(Keys.PageDocuments)
        .Where(x => x.ContainsKey(BlogKeys.Published))
        .OrderByDescending(x => x.Get<DateTime>(BlogKeys.Published))
        .GroupBy(x => x.Get<DateTime>(BlogKeys.Published).Year)
        .OrderByDescending(x => x.Key))
    {
        <h1>@group.Key</h1>
        <hr class="my-4" />
        @Html.Partial("_PostList", group);
    }

    <nav aria-label="Archive navigation">
        <ul class="pagination justify-content-center">
             @if(Model.Bool(Keys.HasPreviousPage))
            {
                <li class="page-item">
                    <a class="page-link" href="@(Context.GetLink(Model.Document(Keys.PreviousPage)))"><span aria-hidden="true">&larr;</span> Newer</a>
                </li>
            } 
            else
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Newer</a>
                </li>
            }
            @if(Model.Bool(Keys.HasNextPage))
            {
                <li class="page-item">
                    <a class="page-link" href="@(Context.GetLink(Model.Document(Keys.NextPage)))">Older <span aria-hidden="true">&rarr;</span></a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Older</a>
                </li>
            }
        </ul>
    </nav>
}