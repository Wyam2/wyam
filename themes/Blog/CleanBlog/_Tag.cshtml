Title: All Tags
---
<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">
            @Html.Partial("_PostList", Model.DocumentList(Keys.PageDocuments).OrderByDescending(x => x.Get<DateTime>(BlogKeys.Published)))

            <nav aria-label="Archive navigation">
                <ul class="pagination justify-content-center">
                    @if(Model.Bool(Keys.HasPreviousPage))
                    {
                        <li class="page-item">
                            <a class="page-link" href="@(Context.GetLink(Model.Document(Keys.PreviousPage)))"><span aria-hidden="true">&larr;</span> Newer</a>
                        </li>
                    } 
                    else
                    {
                        <li class="page-item disabled">
                            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Newer</a>
                        </li>
                    }
                    @if(Model.Bool(Keys.HasNextPage))
                    {
                        <li class="page-item">
                            <a class="page-link" href="@(Context.GetLink(Model.Document(Keys.NextPage)))">Older <span aria-hidden="true">&rarr;</span></a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Older</a>
                        </li>
                    }
                </ul>
            </nav>
            <hr class="hidden-xs-down hidden-md-up" />
        </div>
		
        <div class="col-sm-4 col-sm-height">
            @foreach (IDocument tagDocument in Documents[Blog.Tags]
                .GroupBy(x => x.String(BlogKeys.Tag)).Select(x => x.Where(p => p.Get<int>(Keys.CurrentPage) == 1).First())
                .OrderByDescending(x => x.Get<int>(Keys.TotalItems)))
            {
                string tagName = tagDocument.String(BlogKeys.Tag);
                string postCount = tagDocument.String(Keys.TotalItems);
                string buttonStyle = tagName == Model.String(BlogKeys.Tag) ? "btn-primary" : "btn-default";
                <a role="button" href="@Context.GetLink(tagDocument)" class="btn @buttonStyle btn-xs">@tagName (@postCount)</a>
            }
        </div>
    </div>
</div>